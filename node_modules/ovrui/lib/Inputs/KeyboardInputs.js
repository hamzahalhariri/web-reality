/*
 * Copyright (c) 2016-present, Oculus, LLC
 * All rights reserved.
 *
 * This source code is licensed under the license found in the LICENSE file in
 * the root directory of this source tree.
 */
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*
opyright (c) 2016-present, Oculus, LLC
ll rights reserved.

his source code is licensed under the license found in the LICENSE file in
the root directory of this source tree.


var _ThreeShim = require('../ThreeShim');

var _ThreeShim2 = _interopRequireDefault(_ThreeShim);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * Basic wrapper of keyboard events, which can dispatch KeyboardInputEvents
 */
var KeyboardInputs = function () {
  function KeyboardInputs() {
    _classCallCheck(this, KeyboardInputs);

    this.eventDispatcher = new _ThreeShim2.default.EventDispatcher();
    this.type = 'KeyboardInputs';
    this.inputEventType = 'KeyboardInputEvent';

    document.addEventListener('keydown', this._onKeyEvent.bind(this), false);
    document.addEventListener('keyup', this._onKeyEvent.bind(this), false);
  }

  _createClass(KeyboardInputs, [{
    key: 'generateInputEvent',
    value: function generateInputEvent(event) {
      // Only pass those needed properties in WebVR
      return {
        type: this.inputEventType,
        altKey: event.altKey,
        code: event.code,
        ctrlKey: event.ctrlKey,
        key: event.key,
        keyCode: event.keyCode,
        metaKey: event.metaKey,
        repeat: event.repeat,
        shiftKey: event.shiftKey,
        keyEventType: event.type
      };
    }
  }, {
    key: '_onKeyEvent',
    value: function _onKeyEvent(event) {
      this.eventDispatcher.dispatchEvent(this.generateInputEvent(event));
    }
  }]);

  return KeyboardInputs;
}();

exports.default = KeyboardInputs;